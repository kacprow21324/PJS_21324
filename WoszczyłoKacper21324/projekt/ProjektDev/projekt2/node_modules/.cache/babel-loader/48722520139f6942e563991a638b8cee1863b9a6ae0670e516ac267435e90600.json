{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kacper\\\\Desktop\\\\React\\\\ProjektDev\\\\projekt\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PostThread from './PostThread.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostList({\n  posts,\n  user,\n  onVote,\n  onVoteReply,\n  onReply\n}) {\n  _s();\n  const [openPostId, setOpenPostId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '0.5rem',\n        margin: '0.5rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => setOpenPostId(openPostId === p.id ? null : p.id),\n        children: [p.title, \" (Polubie\\u0144: \", p.score, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: p.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onVote(p.id, 'up'),\n        children: \"Lubi\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onVote(p.id, 'down'),\n        children: \"Nie lubi\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), openPostId === p.id && /*#__PURE__*/_jsxDEV(PostThread, {\n        post: p,\n        user: user,\n        onVoteReply: onVoteReply,\n        onReply: onReply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, p.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"2hcKabwASN0S4UY1dLoL7yOVehQ=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","PostThread","jsxDEV","_jsxDEV","PostList","posts","user","onVote","onVoteReply","onReply","_s","openPostId","setOpenPostId","children","map","p","style","border","padding","margin","cursor","onClick","id","title","score","fileName","_jsxFileName","lineNumber","columnNumber","text","post","_c","$RefreshReg$"],"sources":["C:/Users/Kacper/Desktop/React/ProjektDev/projekt/src/components/PostList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PostThread from './PostThread.js';\r\n\r\nexport default function PostList({ posts, user, onVote, onVoteReply, onReply }) {\r\n  const [openPostId, setOpenPostId] = useState(null);\r\n  return (\r\n    <div>\r\n      {posts.map(p => (\r\n        <div key={p.id} style={{ border: '1px solid #ccc', padding: '0.5rem', margin: '0.5rem 0' }}>\r\n          <h3 style={{ cursor: 'pointer' }} onClick={() => setOpenPostId(openPostId === p.id ? null : p.id)}>\r\n            {p.title} (Polubień: {p.score})\r\n          </h3>\r\n          <p>{p.text}</p>\r\n          <button onClick={() => onVote(p.id, 'up')}>Lubię</button>\r\n          <button onClick={() => onVote(p.id, 'down')}>Nie lubię</button>\r\n          {openPostId === p.id && (\r\n            <PostThread\r\n              post={p}\r\n              user={user}\r\n              onVoteReply={onVoteReply}\r\n              onReply={onReply}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,MAAM;EAAEC,WAAW;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,oBACEG,OAAA;IAAAU,QAAA,EACGR,KAAK,CAACS,GAAG,CAACC,CAAC,iBACVZ,OAAA;MAAgBa,KAAK,EAAE;QAAEC,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAW,CAAE;MAAAN,QAAA,gBACzFV,OAAA;QAAIa,KAAK,EAAE;UAAEI,MAAM,EAAE;QAAU,CAAE;QAACC,OAAO,EAAEA,CAAA,KAAMT,aAAa,CAACD,UAAU,KAAKI,CAAC,CAACO,EAAE,GAAG,IAAI,GAAGP,CAAC,CAACO,EAAE,CAAE;QAAAT,QAAA,GAC/FE,CAAC,CAACQ,KAAK,EAAC,mBAAY,EAACR,CAAC,CAACS,KAAK,EAAC,GAChC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLzB,OAAA;QAAAU,QAAA,EAAIE,CAAC,CAACc;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfzB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMd,MAAM,CAACQ,CAAC,CAACO,EAAE,EAAE,IAAI,CAAE;QAAAT,QAAA,EAAC;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzDzB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMd,MAAM,CAACQ,CAAC,CAACO,EAAE,EAAE,MAAM,CAAE;QAAAT,QAAA,EAAC;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC9DjB,UAAU,KAAKI,CAAC,CAACO,EAAE,iBAClBnB,OAAA,CAACF,UAAU;QACT6B,IAAI,EAAEf,CAAE;QACRT,IAAI,EAAEA,IAAK;QACXE,WAAW,EAAEA,WAAY;QACzBC,OAAO,EAAEA;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CACF;IAAA,GAdOb,CAAC,CAACO,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAxBuBN,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}