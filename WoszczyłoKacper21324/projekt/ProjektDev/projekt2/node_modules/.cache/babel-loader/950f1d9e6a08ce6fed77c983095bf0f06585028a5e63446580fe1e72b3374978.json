{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kacper\\\\Desktop\\\\React\\\\ProjektDev\\\\projekt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport Login from './components/Login.js';\nimport NewPostForm from './components/NewPostForm.js';\nimport PostList from './components/PostList.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (user) fetch('/posts').then(r => r.json()).then(setPosts);\n  }, [user]);\n  if (!user) return /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: setUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Witaj, \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPostForm, {\n      user: user,\n      onPosted: () => {/* odśwież */}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7OGo3MT+Ow5wlDwaLLH+AToK9t4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","Login","NewPostForm","PostList","jsxDEV","_jsxDEV","App","_s","user","setUser","posts","setPosts","fetch","then","r","json","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onPosted","_c","$RefreshReg$"],"sources":["C:/Users/Kacper/Desktop/React/ProjektDev/projekt/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport Login from './components/Login.js';\nimport NewPostForm from './components/NewPostForm.js';\nimport PostList from './components/PostList.js';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    if (user) fetch('/posts').then(r => r.json()).then(setPosts);\n  }, [user]);\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  return (\n    <div className=\"container\">\n      <h1>Witaj, {user}</h1>\n      <NewPostForm user={user} onPosted={() => {/* odśwież */}} />\n      <PostList posts={posts} user={user} />\n    </div>\n    )\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,EAAEI,KAAK,CAAC,QAAQ,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACF,QAAQ,CAAC;EAC9D,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,IAAI,CAACA,IAAI,EAAE,oBAAOH,OAAA,CAACJ,KAAK;IAACe,OAAO,EAAEP;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE7C,oBACEf,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,GAAI,SAAO,EAACd,IAAI;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBf,OAAA,CAACH,WAAW;MAACM,IAAI,EAAEA,IAAK;MAACe,QAAQ,EAAEA,CAAA,KAAM,CAAC;IAAe;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5Df,OAAA,CAACF,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACF,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACb,EAAA,CAjBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}