{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kacper\\\\Desktop\\\\React\\\\ProjektDev\\\\projekt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport Login from './components/Login.js';\nimport NewPostForm from './components/NewPostForm.js';\nimport PostList from './components/PostList.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'redditBlogData';\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(STORAGE_KEY)) || [];\n    } catch {\n      return [];\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(posts));\n  }, [posts]);\n  const addPost = ({\n    title,\n    text\n  }) => {\n    const newPost = {\n      id: Date.now(),\n      user,\n      title,\n      text,\n      score: 0,\n      upvotes: [],\n      downvotes: [],\n      replies: []\n    };\n    setPosts(prev => [newPost, ...prev]);\n  };\n  const vote = (postId, type) => {\n    setPosts(prev => prev.map(p => {\n      if (p.id !== postId) return p;\n      // usuń poprzednie głosy\n      const up = p.upvotes.filter(u => u !== user);\n      const down = p.downvotes.filter(u => u !== user);\n      if (type === 'up') up.push(user);\n      if (type === 'down') down.push(user);\n      return {\n        ...p,\n        upvotes: up,\n        downvotes: down,\n        score: up.length - down.length\n      };\n    }));\n  };\n  const addReply = (postId, parentId, text) => {\n    setPosts(prev => prev.map(p => {\n      if (p.id !== postId) return p;\n      const reply = {\n        id: Date.now(),\n        user,\n        text,\n        parentId\n      };\n      return {\n        ...p,\n        replies: [...p.replies, reply]\n      };\n    }));\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: setUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Witaj, \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPostForm, {\n      onPost: addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      user: user,\n      onVote: vote,\n      onReply: addReply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nvt249m/52buIvjyC5XNT48BdpU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","Login","NewPostForm","PostList","jsxDEV","_jsxDEV","STORAGE_KEY","App","_s","user","setUser","posts","setPosts","JSON","parse","localStorage","getItem","setItem","stringify","addPost","title","text","newPost","id","Date","now","score","upvotes","downvotes","replies","prev","vote","postId","type","map","p","up","filter","u","down","push","length","addReply","parentId","reply","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onPost","onVote","onReply","_c","$RefreshReg$"],"sources":["C:/Users/Kacper/Desktop/React/ProjektDev/projekt/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport Login from './components/Login.js';\nimport NewPostForm from './components/NewPostForm.js';\nimport PostList from './components/PostList.js';\nimport './App.css';\n\nconst STORAGE_KEY = 'redditBlogData';\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState(() => {\n    try { return JSON.parse(localStorage.getItem(STORAGE_KEY)) || []; }\n    catch { return []; }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(posts));\n  }, [posts]);\n\n  const addPost = ({ title, text }) => {\n    const newPost = {\n      id: Date.now(),\n      user,\n      title,\n      text,\n      score: 0,\n      upvotes: [],\n      downvotes: [],\n      replies: []\n    };\n    setPosts(prev => [newPost, ...prev]);\n  };\n\n  const vote = (postId, type) => {\n    setPosts(prev => prev.map(p => {\n      if (p.id !== postId) return p;\n      // usuń poprzednie głosy\n      const up = p.upvotes.filter(u => u !== user);\n      const down = p.downvotes.filter(u => u !== user);\n      if (type === 'up') up.push(user);\n      if (type === 'down') down.push(user);\n      return {\n        ...p,\n        upvotes: up,\n        downvotes: down,\n        score: up.length - down.length\n      };\n    }));\n  };\n\n  const addReply = (postId, parentId, text) => {\n    setPosts(prev => prev.map(p => {\n      if (p.id !== postId) return p;\n      const reply = { id: Date.now(), user, text, parentId };\n      return { ...p, replies: [...p.replies, reply] };\n    }));\n  };\n\n  if (!user) return <Login onLogin={setUser} />;\n\n  return (\n    <div className=\"container\">\n      <h1>Witaj, {user}</h1>\n      <NewPostForm onPost={addPost} />\n      <PostList\n        posts={posts}\n        user={user}\n        onVote={vote}\n        onReply={addReply}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}