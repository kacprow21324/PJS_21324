{"ast":null,"code":"import _objectSpread from\"C:/Users/Kacper/Desktop/React/ProjektDev/projekt/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import Login from'./components/Login.js';import NewPostForm from'./components/NewPostForm.js';import PostList from'./components/PostList.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const STORAGE_KEY='redditBlogData';export default function App(){const[user,setUser]=useState(null);const[posts,setPosts]=useState(()=>{try{const saved=localStorage.getItem(STORAGE_KEY);return saved?JSON.parse(saved):[];}catch(_unused){return[];}});useEffect(()=>{localStorage.setItem(STORAGE_KEY,JSON.stringify(posts));},[posts]);const addPost=_ref=>{let{title,text}=_ref;const newPost={id:Date.now(),user,title,text,score:0,upvotes:[],downvotes:[],replies:[]};setPosts(prev=>[newPost,...prev]);};const deletePost=postId=>{setPosts(prev=>prev.filter(p=>p.id!==postId));};const votePost=(postId,type)=>{setPosts(prev=>prev.map(p=>{if(p.id!==postId)return p;const up=(p.upvotes||[]).filter(u=>u!==user);const down=(p.downvotes||[]).filter(u=>u!==user);if(type==='up')up.push(user);if(type==='down')down.push(user);return _objectSpread(_objectSpread({},p),{},{upvotes:up,downvotes:down,score:up.length-down.length});}));};const voteReply=(postId,replyId,type)=>{setPosts(prev=>prev.map(p=>{if(p.id!==postId)return p;const updatedReplies=p.replies.map(r=>{if(r.id!==replyId)return r;const up=(r.upvotes||[]).filter(u=>u!==user);const down=(r.downvotes||[]).filter(u=>u!==user);if(type==='up')up.push(user);if(type==='down')down.push(user);return _objectSpread(_objectSpread({},r),{},{upvotes:up,downvotes:down,score:up.length-down.length});});return _objectSpread(_objectSpread({},p),{},{replies:updatedReplies});}));};const addReply=(postId,parentId,text)=>{setPosts(prev=>prev.map(p=>{if(p.id!==postId)return p;const reply={id:Date.now(),user,text,parentId,upvotes:[],downvotes:[],score:0};return _objectSpread(_objectSpread({},p),{},{replies:[...p.replies,reply]});}));};const logout=()=>setUser(null);if(!user)return/*#__PURE__*/_jsx(Login,{onLogin:setUser});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"header\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Witaj, \",user]}),/*#__PURE__*/_jsx(\"button\",{onClick:logout,children:\"Wyloguj\"})]}),/*#__PURE__*/_jsx(NewPostForm,{onPost:addPost}),/*#__PURE__*/_jsx(PostList,{posts:posts,user:user,onVote:votePost,onVoteReply:voteReply,onReply:addReply,onDelete:deletePost})]});}","map":{"version":3,"names":["React","useState","useEffect","Login","NewPostForm","PostList","jsx","_jsx","jsxs","_jsxs","STORAGE_KEY","App","user","setUser","posts","setPosts","saved","localStorage","getItem","JSON","parse","_unused","setItem","stringify","addPost","_ref","title","text","newPost","id","Date","now","score","upvotes","downvotes","replies","prev","deletePost","postId","filter","p","votePost","type","map","up","u","down","push","_objectSpread","length","voteReply","replyId","updatedReplies","r","addReply","parentId","reply","logout","onLogin","className","children","style","display","justifyContent","alignItems","onClick","onPost","onVote","onVoteReply","onReply","onDelete"],"sources":["C:/Users/Kacper/Desktop/React/ProjektDev/projekt/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Login from './components/Login.js';\nimport NewPostForm from './components/NewPostForm.js';\nimport PostList from './components/PostList.js';\n\nconst STORAGE_KEY = 'redditBlogData';\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState(() => {\n    try { const saved = localStorage.getItem(STORAGE_KEY); return saved ? JSON.parse(saved) : []; } catch { return []; }\n  });\n  useEffect(() => { localStorage.setItem(STORAGE_KEY, JSON.stringify(posts)); }, [posts]);\n  const addPost = ({ title, text }) => {\n    const newPost = { id: Date.now(), user, title, text, score: 0, upvotes: [], downvotes: [], replies: [] };\n    setPosts(prev => [newPost, ...prev]);\n  };\n  const deletePost = postId => {\n    setPosts(prev => prev.filter(p => p.id !== postId));\n  };\n  const votePost = (postId, type) => {\n    setPosts(prev => prev.map(p => {\n      if (p.id !== postId) return p;\n      const up = (p.upvotes || []).filter(u => u !== user);\n      const down = (p.downvotes || []).filter(u => u !== user);\n      if (type === 'up') up.push(user);\n      if (type === 'down') down.push(user);\n      return { ...p, upvotes: up, downvotes: down, score: up.length - down.length };\n    }));\n  };\n  const voteReply = (postId, replyId, type) => {\n    setPosts(prev => prev.map(p => {\n      if (p.id !== postId) return p;\n      const updatedReplies = p.replies.map(r => {\n        if (r.id !== replyId) return r;\n        const up = (r.upvotes || []).filter(u => u !== user);\n        const down = (r.downvotes || []).filter(u => u !== user);\n        if (type === 'up') up.push(user);\n        if (type === 'down') down.push(user);\n        return { ...r, upvotes: up, downvotes: down, score: up.length - down.length };\n      });\n      return { ...p, replies: updatedReplies };\n    }));\n  };\n  const addReply = (postId, parentId, text) => {\n    setPosts(prev => prev.map(p => {\n      if (p.id !== postId) return p;\n      const reply = { id: Date.now(), user, text, parentId, upvotes: [], downvotes: [], score: 0 };\n      return { ...p, replies: [...p.replies, reply] };\n    }));\n  };\n  const logout = () => setUser(null);\n  if (!user) return <Login onLogin={setUser} />;\n  return (\n    <div className=\"container\">\n      <header style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <h1>Witaj, {user}</h1>\n        <button onClick={logout}>Wyloguj</button>\n      </header>\n      <NewPostForm onPost={addPost} />\n      <PostList posts={posts} user={user} onVote={votePost} onVoteReply={voteReply} onReply={addReply} onDelete={deletePost} />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}