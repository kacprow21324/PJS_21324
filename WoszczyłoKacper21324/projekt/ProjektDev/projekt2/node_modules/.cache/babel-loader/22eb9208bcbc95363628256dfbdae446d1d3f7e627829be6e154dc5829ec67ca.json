{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kacper\\\\Desktop\\\\React\\\\ProjektDev\\\\projekt\\\\src\\\\components\\\\NewPostForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPostForm({\n  user,\n  onPosted\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const submit = () => {\n    fetch('/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        text,\n        user\n      })\n    }).then(res => {\n      if (res.ok) {\n        setTitle('');\n        setText('');\n        onPosted(); // np. odświeżenie listy postów\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Tytu\\u0142\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Tre\\u015B\\u0107\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"Dodaj post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPostForm, \"6l8lvR5TAW7xgNOPNP86qqPHScI=\");\n_c = NewPostForm;\nvar _c;\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NewPostForm","user","onPosted","_s","title","setTitle","text","setText","submit","fetch","method","headers","body","JSON","stringify","then","res","ok","style","marginBottom","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kacper/Desktop/React/ProjektDev/projekt/src/components/NewPostForm.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function NewPostForm({ user, onPosted }) {\r\n  const [title, setTitle] = useState('');\r\n  const [text, setText]   = useState('');\r\n\r\n  const submit = () => {\r\n    fetch('/posts', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ title, text, user })\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        setTitle('');\r\n        setText('');\r\n        onPosted();        // np. odświeżenie listy postów\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: '1rem' }}>\r\n      <input\r\n        placeholder=\"Tytuł\"\r\n        value={title}\r\n        onChange={e => setTitle(e.target.value)}\r\n      />\r\n      <br/>\r\n      <textarea\r\n        placeholder=\"Treść\"\r\n        value={text}\r\n        onChange={e => setText(e.target.value)}\r\n      />\r\n      <br/>\r\n      <button onClick={submit}>Dodaj post</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,WAAWA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAKV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBC,KAAK,CAAC,QAAQ,EAAE;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEE,IAAI;QAAEL;MAAK,CAAC;IAC5C,CAAC,CAAC,CACDc,IAAI,CAACC,GAAG,IAAI;MACX,IAAIA,GAAG,CAACC,EAAE,EAAE;QACVZ,QAAQ,CAAC,EAAE,CAAC;QACZE,OAAO,CAAC,EAAE,CAAC;QACXL,QAAQ,CAAC,CAAC,CAAC,CAAQ;MACrB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEH,OAAA;IAAKmB,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnCrB,OAAA;MACEsB,WAAW,EAAC,YAAO;MACnBC,KAAK,EAAElB,KAAM;MACbmB,QAAQ,EAAEC,CAAC,IAAInB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACF9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL9B,OAAA;MACEsB,WAAW,EAAC,iBAAO;MACnBC,KAAK,EAAEhB,IAAK;MACZiB,QAAQ,EAAEC,CAAC,IAAIjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACF9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL9B,OAAA;MAAQ+B,OAAO,EAAEtB,MAAO;MAAAY,QAAA,EAAC;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAC1B,EAAA,CApCuBH,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}