{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kacper\\\\Desktop\\\\PJS_projekt\\\\projekt_dev\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PostThread from './PostThread.js';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostList({\n  posts,\n  user,\n  onVote,\n  onVoteReply,\n  onReply,\n  onDelete\n}) {\n  _s();\n  const [openPostId, setOpenPostId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => setOpenPostId(openPostId === p.id ? null : p.id),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [p.title, \" (Polubie\\u0144: \", p.score, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: p.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => onVote(p.id, 'up'),\n        children: \"Lubi\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => onVote(p.id, 'down'),\n        children: \"Nie lubi\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), (user === 'Admin' || user === p.user) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => onDelete(p.id),\n        children: \"Usu\\u0144\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), openPostId === p.id && /*#__PURE__*/_jsxDEV(PostThread, {\n        post: p,\n        user: user,\n        onVoteReply: onVoteReply,\n        onReply: onReply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, p.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"2hcKabwASN0S4UY1dLoL7yOVehQ=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","PostThread","jsxDEV","_jsxDEV","PostList","posts","user","onVote","onVoteReply","onReply","onDelete","_s","openPostId","setOpenPostId","children","map","p","className","onClick","id","style","cursor","title","score","fileName","_jsxFileName","lineNumber","columnNumber","text","post","_c","$RefreshReg$"],"sources":["C:/Users/Kacper/Desktop/PJS_projekt/projekt_dev/src/components/PostList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PostThread from './PostThread.js';\r\nimport '../App.css';\r\n\r\nexport default function PostList({ posts, user, onVote, onVoteReply, onReply, onDelete }) {\r\n  const [openPostId, setOpenPostId] = useState(null);\r\n\r\n  return (\r\n    <div>\r\n      {posts.map(p => (\r\n        <div key={p.id} className=\"post\">\r\n          <h3 onClick={() => setOpenPostId(openPostId===p.id?null:p.id)} style={{ cursor:'pointer' }}>\r\n            {p.title} (Polubień: {p.score})\r\n          </h3>\r\n          <p>{p.text}</p>\r\n          <button className=\"btn\" onClick={() => onVote(p.id, 'up')}>Lubię</button>\r\n          <button className=\"btn\" onClick={() => onVote(p.id, 'down')}>Nie lubię</button>\r\n          {(user==='Admin'|| user===p.user) && (\r\n            <button className=\"btn\" onClick={() => onDelete(p.id)}>Usuń</button>\r\n          )}\r\n          {openPostId===p.id && (\r\n            <PostThread post={p} user={user} onVoteReply={onVoteReply} onReply={onReply} />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,MAAM;EAAEC,WAAW;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElD,oBACEG,OAAA;IAAAW,QAAA,EACGT,KAAK,CAACU,GAAG,CAACC,CAAC,iBACVb,OAAA;MAAgBc,SAAS,EAAC,MAAM;MAAAH,QAAA,gBAC9BX,OAAA;QAAIe,OAAO,EAAEA,CAAA,KAAML,aAAa,CAACD,UAAU,KAAGI,CAAC,CAACG,EAAE,GAAC,IAAI,GAACH,CAAC,CAACG,EAAE,CAAE;QAACC,KAAK,EAAE;UAAEC,MAAM,EAAC;QAAU,CAAE;QAAAP,QAAA,GACxFE,CAAC,CAACM,KAAK,EAAC,mBAAY,EAACN,CAAC,CAACO,KAAK,EAAC,GAChC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLxB,OAAA;QAAAW,QAAA,EAAIE,CAAC,CAACY;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfxB,OAAA;QAAQc,SAAS,EAAC,KAAK;QAACC,OAAO,EAAEA,CAAA,KAAMX,MAAM,CAACS,CAAC,CAACG,EAAE,EAAE,IAAI,CAAE;QAAAL,QAAA,EAAC;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzExB,OAAA;QAAQc,SAAS,EAAC,KAAK;QAACC,OAAO,EAAEA,CAAA,KAAMX,MAAM,CAACS,CAAC,CAACG,EAAE,EAAE,MAAM,CAAE;QAAAL,QAAA,EAAC;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC9E,CAACrB,IAAI,KAAG,OAAO,IAAGA,IAAI,KAAGU,CAAC,CAACV,IAAI,kBAC9BH,OAAA;QAAQc,SAAS,EAAC,KAAK;QAACC,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACM,CAAC,CAACG,EAAE,CAAE;QAAAL,QAAA,EAAC;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACpE,EACAf,UAAU,KAAGI,CAAC,CAACG,EAAE,iBAChBhB,OAAA,CAACF,UAAU;QAAC4B,IAAI,EAAEb,CAAE;QAACV,IAAI,EAAEA,IAAK;QAACE,WAAW,EAAEA,WAAY;QAACC,OAAO,EAAEA;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC/E;IAAA,GAZOX,CAAC,CAACG,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaT,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CAvBuBP,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}